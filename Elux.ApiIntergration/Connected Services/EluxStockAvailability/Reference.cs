//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elux.ApiIntergration.EluxStockAvailability {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://stockavailable.ndevr.com/", ConfigurationName="EluxStockAvailability.StockAvailable")]
    public interface StockAvailable {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://stockavailable.ndevr.com/StockAvailable/getStockAvailableRequest", ReplyAction="http://stockavailable.ndevr.com/StockAvailable/getStockAvailableResponse")]
        Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse getStockAvailable(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://stockavailable.ndevr.com/StockAvailable/getStockAvailableRequest", ReplyAction="http://stockavailable.ndevr.com/StockAvailable/getStockAvailableResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse> getStockAvailableAsync(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getStockAvailableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getStockAvailable", Namespace="http://stockavailable.ndevr.com/", Order=0)]
        public Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequestBody Body;
        
        public getStockAvailableRequest() {
        }
        
        public getStockAvailableRequest(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class getStockAvailableRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string emailAddress;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string modelNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ean;
        
        public getStockAvailableRequestBody() {
        }
        
        public getStockAvailableRequestBody(string emailAddress, string modelNumber, string ean) {
            this.emailAddress = emailAddress;
            this.modelNumber = modelNumber;
            this.ean = ean;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getStockAvailableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getStockAvailableResponse", Namespace="http://stockavailable.ndevr.com/", Order=0)]
        public Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponseBody Body;
        
        public getStockAvailableResponse() {
        }
        
        public getStockAvailableResponse(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class getStockAvailableResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double quantityAvailable;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        public getStockAvailableResponseBody() {
        }
        
        public getStockAvailableResponseBody(double quantityAvailable, string errorMessage) {
            this.quantityAvailable = quantityAvailable;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StockAvailableChannel : Elux.ApiIntergration.EluxStockAvailability.StockAvailable, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockAvailableClient : System.ServiceModel.ClientBase<Elux.ApiIntergration.EluxStockAvailability.StockAvailable>, Elux.ApiIntergration.EluxStockAvailability.StockAvailable {
        
        public StockAvailableClient() {
        }
        
        public StockAvailableClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockAvailableClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockAvailableClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockAvailableClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse Elux.ApiIntergration.EluxStockAvailability.StockAvailable.getStockAvailable(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest request) {
            return base.Channel.getStockAvailable(request);
        }
        
        public double getStockAvailable(string emailAddress, string modelNumber, string ean, out string errorMessage) {
            Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest inValue = new Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest();
            inValue.Body = new Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequestBody();
            inValue.Body.emailAddress = emailAddress;
            inValue.Body.modelNumber = modelNumber;
            inValue.Body.ean = ean;
            Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse retVal = ((Elux.ApiIntergration.EluxStockAvailability.StockAvailable)(this)).getStockAvailable(inValue);
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.quantityAvailable;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse> Elux.ApiIntergration.EluxStockAvailability.StockAvailable.getStockAvailableAsync(Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest request) {
            return base.Channel.getStockAvailableAsync(request);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxStockAvailability.getStockAvailableResponse> getStockAvailableAsync(string emailAddress, string modelNumber, string ean) {
            Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest inValue = new Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequest();
            inValue.Body = new Elux.ApiIntergration.EluxStockAvailability.getStockAvailableRequestBody();
            inValue.Body.emailAddress = emailAddress;
            inValue.Body.modelNumber = modelNumber;
            inValue.Body.ean = ean;
            return ((Elux.ApiIntergration.EluxStockAvailability.StockAvailable)(this)).getStockAvailableAsync(inValue);
        }
    }
}
