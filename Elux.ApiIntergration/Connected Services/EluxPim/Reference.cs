//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elux.ApiIntergration.EluxPim {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCategoryEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Elux.ApiIntergration.EluxPim.CategoryExtEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Elux.ApiIntergration.EluxPim.CategoryEntity))]
    public partial class BaseCategoryEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryExtEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class CategoryExtEntity : Elux.ApiIntergration.EluxPim.BaseCategoryEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ProductBasicEntity[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.CategoryExtEntity[] SubCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.CategoryExtEntity[] SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryField, value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class CategoryEntity : Elux.ApiIntergration.EluxPim.BaseCategoryEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.CategoryEntity[] SubCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.CategoryEntity[] SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryField, value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductBasicEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Elux.ApiIntergration.EluxPim.ProductEntity))]
    public partial class ProductBasicEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrentPromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.BFAEntity[] FeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccessoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecalledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LimitedDistributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RRPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplacementModelNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplacementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SafrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VirtualCategoryGUIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Availability {
            get {
                return this.AvailabilityField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailabilityField, value) != true)) {
                    this.AvailabilityField = value;
                    this.RaisePropertyChanged("Availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryGUID {
            get {
                return this.CategoryGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryGUIDField, value) != true)) {
                    this.CategoryGUIDField = value;
                    this.RaisePropertyChanged("CategoryGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrentPromotion {
            get {
                return this.CurrentPromotionField;
            }
            set {
                if ((this.CurrentPromotionField.Equals(value) != true)) {
                    this.CurrentPromotionField = value;
                    this.RaisePropertyChanged("CurrentPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ean {
            get {
                return this.EanField;
            }
            set {
                if ((object.ReferenceEquals(this.EanField, value) != true)) {
                    this.EanField = value;
                    this.RaisePropertyChanged("Ean");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.BFAEntity[] Features {
            get {
                return this.FeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturesField, value) != true)) {
                    this.FeaturesField = value;
                    this.RaisePropertyChanged("Features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccessory {
            get {
                return this.IsAccessoryField;
            }
            set {
                if ((this.IsAccessoryField.Equals(value) != true)) {
                    this.IsAccessoryField = value;
                    this.RaisePropertyChanged("IsAccessory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecalled {
            get {
                return this.IsRecalledField;
            }
            set {
                if ((this.IsRecalledField.Equals(value) != true)) {
                    this.IsRecalledField = value;
                    this.RaisePropertyChanged("IsRecalled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LimitedDistribution {
            get {
                return this.LimitedDistributionField;
            }
            set {
                if ((this.LimitedDistributionField.Equals(value) != true)) {
                    this.LimitedDistributionField = value;
                    this.RaisePropertyChanged("LimitedDistribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineName {
            get {
                return this.LineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LineNameField, value) != true)) {
                    this.LineNameField = value;
                    this.RaisePropertyChanged("LineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelNumber {
            get {
                return this.ModelNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNumberField, value) != true)) {
                    this.ModelNumberField = value;
                    this.RaisePropertyChanged("ModelNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifyDate {
            get {
                return this.ModifyDateField;
            }
            set {
                if ((this.ModifyDateField.Equals(value) != true)) {
                    this.ModifyDateField = value;
                    this.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductImagePath {
            get {
                return this.ProductImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductImagePathField, value) != true)) {
                    this.ProductImagePathField = value;
                    this.RaisePropertyChanged("ProductImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductStatus {
            get {
                return this.ProductStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductStatusField, value) != true)) {
                    this.ProductStatusField = value;
                    this.RaisePropertyChanged("ProductStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTitle {
            get {
                return this.ProductTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTitleField, value) != true)) {
                    this.ProductTitleField = value;
                    this.RaisePropertyChanged("ProductTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RRP {
            get {
                return this.RRPField;
            }
            set {
                if ((this.RRPField.Equals(value) != true)) {
                    this.RRPField = value;
                    this.RaisePropertyChanged("RRP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplacementModelNumber {
            get {
                return this.ReplacementModelNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacementModelNumberField, value) != true)) {
                    this.ReplacementModelNumberField = value;
                    this.RaisePropertyChanged("ReplacementModelNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplacementName {
            get {
                return this.ReplacementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacementNameField, value) != true)) {
                    this.ReplacementNameField = value;
                    this.RaisePropertyChanged("ReplacementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Safr {
            get {
                return this.SafrField;
            }
            set {
                if ((this.SafrField.Equals(value) != true)) {
                    this.SafrField = value;
                    this.RaisePropertyChanged("Safr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockName {
            get {
                return this.StockNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StockNameField, value) != true)) {
                    this.StockNameField = value;
                    this.RaisePropertyChanged("StockName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VirtualCategoryGUID {
            get {
                return this.VirtualCategoryGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VirtualCategoryGUIDField, value) != true)) {
                    this.VirtualCategoryGUIDField = value;
                    this.RaisePropertyChanged("VirtualCategoryGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class ProductEntity : Elux.ApiIntergration.EluxPim.ProductBasicEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ProductEntity[] AccessoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.AttachmentEntity[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.BFAEntity[] AwardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.BFAEntity[] BenefitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] KitComponentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ProductEntity[] ProductSKUsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ProductEntity[] ProductsOfThisAccessoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] RelationshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.TechDataGroupEntity TechDataGroupEntityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ProductEntity[] Accessories {
            get {
                return this.AccessoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessoriesField, value) != true)) {
                    this.AccessoriesField = value;
                    this.RaisePropertyChanged("Accessories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.BFAEntity[] Awards {
            get {
                return this.AwardsField;
            }
            set {
                if ((object.ReferenceEquals(this.AwardsField, value) != true)) {
                    this.AwardsField = value;
                    this.RaisePropertyChanged("Awards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.BFAEntity[] Benefits {
            get {
                return this.BenefitsField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitsField, value) != true)) {
                    this.BenefitsField = value;
                    this.RaisePropertyChanged("Benefits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] KitComponents {
            get {
                return this.KitComponentsField;
            }
            set {
                if ((object.ReferenceEquals(this.KitComponentsField, value) != true)) {
                    this.KitComponentsField = value;
                    this.RaisePropertyChanged("KitComponents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ProductEntity[] ProductSKUs {
            get {
                return this.ProductSKUsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSKUsField, value) != true)) {
                    this.ProductSKUsField = value;
                    this.RaisePropertyChanged("ProductSKUs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ProductEntity[] ProductsOfThisAccessory {
            get {
                return this.ProductsOfThisAccessoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsOfThisAccessoryField, value) != true)) {
                    this.ProductsOfThisAccessoryField = value;
                    this.RaisePropertyChanged("ProductsOfThisAccessory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] Relationships {
            get {
                return this.RelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipsField, value) != true)) {
                    this.RelationshipsField = value;
                    this.RaisePropertyChanged("Relationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.TechDataGroupEntity TechDataGroupEntity {
            get {
                return this.TechDataGroupEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.TechDataGroupEntityField, value) != true)) {
                    this.TechDataGroupEntityField = value;
                    this.RaisePropertyChanged("TechDataGroupEntity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BFAEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class BFAEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.AttachmentEntity[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoUrl {
            get {
                return this.VideoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoUrlField, value) != true)) {
                    this.VideoUrlField = value;
                    this.RaisePropertyChanged("VideoUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class AttachmentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ThumbnailItem[] ThumbnailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentType {
            get {
                return this.AttachmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypeField, value) != true)) {
                    this.AttachmentTypeField = value;
                    this.RaisePropertyChanged("AttachmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicationType {
            get {
                return this.PublicationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicationTypeField, value) != true)) {
                    this.PublicationTypeField = value;
                    this.RaisePropertyChanged("PublicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ThumbnailItem[] Thumbnails {
            get {
                return this.ThumbnailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailsField, value) != true)) {
                    this.ThumbnailsField = value;
                    this.RaisePropertyChanged("Thumbnails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThumbnailItem", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.DomainObjects")]
    [System.SerializableAttribute()]
    public partial class ThumbnailItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TechDataGroupEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class TechDataGroupEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.TechDataGroupEntity[] SubGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.TechDataValueEntity[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupGUID {
            get {
                return this.GroupGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupGUIDField, value) != true)) {
                    this.GroupGUIDField = value;
                    this.RaisePropertyChanged("GroupGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.TechDataGroupEntity[] SubGroups {
            get {
                return this.SubGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGroupsField, value) != true)) {
                    this.SubGroupsField = value;
                    this.RaisePropertyChanged("SubGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.TechDataValueEntity[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationshipGroupEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class RelationshipGroupEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.RelationshipEntity[] RelationshipsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.RelationshipEntity[] Relationships {
            get {
                return this.RelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipsField, value) != true)) {
                    this.RelationshipsField = value;
                    this.RaisePropertyChanged("Relationships");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationshipEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class RelationshipEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelNumber {
            get {
                return this.ModelNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNumberField, value) != true)) {
                    this.ModelNumberField = value;
                    this.RaisePropertyChanged("ModelNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TechDataValueEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class TechDataValueEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFacetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechDataAttributeGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFacet {
            get {
                return this.IsFacetField;
            }
            set {
                if ((this.IsFacetField.Equals(value) != true)) {
                    this.IsFacetField = value;
                    this.RaisePropertyChanged("IsFacet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechDataAttributeGUID {
            get {
                return this.TechDataAttributeGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TechDataAttributeGUIDField, value) != true)) {
                    this.TechDataAttributeGUIDField = value;
                    this.RaisePropertyChanged("TechDataAttributeGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
    [System.SerializableAttribute()]
    public partial class MyApplicationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchProductResultEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchProductResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.ProductBasicEntity[] ProductBasicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] ProductBasics {
            get {
                return this.ProductBasicsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductBasicsField, value) != true)) {
                    this.ProductBasicsField = value;
                    this.RaisePropertyChanged("ProductBasics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrochureEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class BrochureEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentName {
            get {
                return this.AttachmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentNameField, value) != true)) {
                    this.AttachmentNameField = value;
                    this.RaisePropertyChanged("AttachmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentType {
            get {
                return this.AttachmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypeField, value) != true)) {
                    this.AttachmentTypeField = value;
                    this.RaisePropertyChanged("AttachmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandCd {
            get {
                return this.BrandCdField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandCdField, value) != true)) {
                    this.BrandCdField = value;
                    this.RaisePropertyChanged("BrandCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandNm {
            get {
                return this.BrandNmField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNmField, value) != true)) {
                    this.BrandNmField = value;
                    this.RaisePropertyChanged("BrandNm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbPath {
            get {
                return this.ThumbPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbPathField, value) != true)) {
                    this.ThumbPathField = value;
                    this.RaisePropertyChanged("ThumbPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockAvailabilityEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    public partial class StockAvailabilityEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Availability {
            get {
                return this.AvailabilityField;
            }
            set {
                if ((this.AvailabilityField.Equals(value) != true)) {
                    this.AvailabilityField = value;
                    this.RaisePropertyChanged("Availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCd {
            get {
                return this.StateCdField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCdField, value) != true)) {
                    this.StateCdField = value;
                    this.RaisePropertyChanged("StateCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities.V2")]
    [System.SerializableAttribute()]
    public partial class PromotionEntity : Elux.ApiIntergration.EluxPim.PromotionEntity1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ModelNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Elux.ApiIntergration.EluxPim.PromotionAttachmentEntity[] PromotionAttachmentEntitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageLink {
            get {
                return this.ImageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLinkField, value) != true)) {
                    this.ImageLinkField = value;
                    this.RaisePropertyChanged("ImageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ModelNumbers {
            get {
                return this.ModelNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNumbersField, value) != true)) {
                    this.ModelNumbersField = value;
                    this.RaisePropertyChanged("ModelNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Elux.ApiIntergration.EluxPim.PromotionAttachmentEntity[] PromotionAttachmentEntities {
            get {
                return this.PromotionAttachmentEntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PromotionAttachmentEntitiesField, value) != true)) {
                    this.PromotionAttachmentEntitiesField = value;
                    this.RaisePropertyChanged("PromotionAttachmentEntities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Elux.ApiIntergration.EluxPim.PromotionEntity))]
    public partial class PromotionEntity1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PromotionEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PromotionStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RedemptionEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RedemptionLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RedemptionStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCd {
            get {
                return this.CountryCdField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCdField, value) != true)) {
                    this.CountryCdField = value;
                    this.RaisePropertyChanged("CountryCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkText {
            get {
                return this.LinkTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkTextField, value) != true)) {
                    this.LinkTextField = value;
                    this.RaisePropertyChanged("LinkText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PromotionEndDate {
            get {
                return this.PromotionEndDateField;
            }
            set {
                if ((this.PromotionEndDateField.Equals(value) != true)) {
                    this.PromotionEndDateField = value;
                    this.RaisePropertyChanged("PromotionEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PromotionStartDate {
            get {
                return this.PromotionStartDateField;
            }
            set {
                if ((this.PromotionStartDateField.Equals(value) != true)) {
                    this.PromotionStartDateField = value;
                    this.RaisePropertyChanged("PromotionStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RedemptionEndDate {
            get {
                return this.RedemptionEndDateField;
            }
            set {
                if ((this.RedemptionEndDateField.Equals(value) != true)) {
                    this.RedemptionEndDateField = value;
                    this.RaisePropertyChanged("RedemptionEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RedemptionLink {
            get {
                return this.RedemptionLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.RedemptionLinkField, value) != true)) {
                    this.RedemptionLinkField = value;
                    this.RaisePropertyChanged("RedemptionLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RedemptionStartDate {
            get {
                return this.RedemptionStartDateField;
            }
            set {
                if ((this.RedemptionStartDateField.Equals(value) != true)) {
                    this.RedemptionStartDateField = value;
                    this.RaisePropertyChanged("RedemptionStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionAttachmentEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities.V2")]
    [System.SerializableAttribute()]
    public partial class PromotionAttachmentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadLink {
            get {
                return this.DownloadLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadLinkField, value) != true)) {
                    this.DownloadLinkField = value;
                    this.RaisePropertyChanged("DownloadLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadTitle {
            get {
                return this.DownloadTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadTitleField, value) != true)) {
                    this.DownloadTitleField = value;
                    this.RaisePropertyChanged("DownloadTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsletterEntity", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Data.Entities.V2")]
    [System.SerializableAttribute()]
    public partial class NewsletterEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Electrolux.Pims/", ConfigurationName="EluxPim.IPimService")]
    public interface IPimService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategory", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceCategoryMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategory(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategory", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryAsync(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductBasic", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductBasicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchProductBasicMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductBasic(string service, string modelNumber, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductBasic", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductBasicResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductBasicAsync(string service, string modelNumber, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductsBasic", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductsBasicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchProductsBasicMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductsBasic(string service, string[] modelNumbers, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductsBasic", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductsBasicResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductsBasicAsync(string service, string[] modelNumbers, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductBasicPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductBasicPaginationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchProductBasicPaginationMyApplicationFault" +
            "Fault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductBasicPagination(string service, string modelNumber, string[] productStatus, string country, int pageIdx, int pageCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductBasicPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductBasicPaginationResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductBasicPaginationAsync(string service, string modelNumber, string[] productStatus, string country, int pageIdx, int pageCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeyword", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchProductKeywordMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductKeyword(string service, string keyword, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeyword", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductKeywordAsync(string service, string keyword, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeywordPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordPaginationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchProductKeywordPaginationMyApplicationFau" +
            "ltFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductKeywordPagination(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeywordPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordPaginationResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductKeywordPaginationAsync(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeywordLimitByModelNumbers", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordLimitByModelNumbersRespons" +
            "e")]
        Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductKeywordLimitByModelNumbers(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt, string[] limitedModelNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchProductKeywordLimitByModelNumbers", ReplyAction="http://Electrolux.Pims/IPimService/SearchProductKeywordLimitByModelNumbersRespons" +
            "e")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductKeywordLimitByModelNumbersAsync(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt, string[] limitedModelNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchAdvancedPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchAdvancedPaginationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/SearchAdvancedPaginationMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchAdvancedPagination(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchAdvancedPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchAdvancedPaginationResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchAdvancedPaginationAsync(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchAdvancedLimitByModelNumbersPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchAdvancedLimitByModelNumbersPaginationRes" +
            "ponse")]
        Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchAdvancedLimitByModelNumbersPagination(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels, string[] limitedModelNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/SearchAdvancedLimitByModelNumbersPagination", ReplyAction="http://Electrolux.Pims/IPimService/SearchAdvancedLimitByModelNumbersPaginationRes" +
            "ponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchAdvancedLimitByModelNumbersPaginationAsync(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels, string[] limitedModelNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetRecentServiceProducts", ReplyAction="http://Electrolux.Pims/IPimService/GetRecentServiceProductsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetRecentServiceProductsMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetRecentServiceProducts(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetRecentServiceProducts", ReplyAction="http://Electrolux.Pims/IPimService/GetRecentServiceProductsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetRecentServiceProductsAsync(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetRecentServiceProductsByCategory", ReplyAction="http://Electrolux.Pims/IPimService/GetRecentServiceProductsByCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetRecentServiceProductsByCategoryMyApplicatio" +
            "nFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetRecentServiceProductsByCategory(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetRecentServiceProductsByCategory", ReplyAction="http://Electrolux.Pims/IPimService/GetRecentServiceProductsByCategoryResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetRecentServiceProductsByCategoryAsync(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProducts", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceProductsMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetServiceProducts(string service, string categoryGuid, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProducts", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetServiceProductsAsync(string service, string categoryGuid, string[] productStatus, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceRelationship", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceRelationshipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceRelationshipMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] GetServiceRelationship(string service, string relationshipType, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceRelationship", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceRelationshipResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[]> GetServiceRelationshipAsync(string service, string relationshipType, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductHeroImage", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductHeroImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceProductHeroImageMyApplicationFaultFa" +
            "ult", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity GetServiceProductHeroImage(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductHeroImage", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductHeroImageResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity> GetServiceProductHeroImageAsync(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductShortDescription", ReplyAction="http://Electrolux.Pims/IPimService/GetProductShortDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductShortDescriptionMyApplicationFaultFa" +
            "ult", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        string GetProductShortDescription(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductShortDescription", ReplyAction="http://Electrolux.Pims/IPimService/GetProductShortDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetProductShortDescriptionAsync(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductShortDescriptions", ReplyAction="http://Electrolux.Pims/IPimService/GetProductShortDescriptionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductShortDescriptionsMyApplicationFaultF" +
            "ault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        System.Collections.Generic.Dictionary<string, string> GetProductShortDescriptions(string[] modelNumbers, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductShortDescriptions", ReplyAction="http://Electrolux.Pims/IPimService/GetProductShortDescriptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductShortDescriptionsAsync(string[] modelNumbers, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductAttachment", ReplyAction="http://Electrolux.Pims/IPimService/GetProductAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductAttachmentMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductAttachment(string modelNumber, string publicationType, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductAttachment", ReplyAction="http://Electrolux.Pims/IPimService/GetProductAttachmentResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductAttachmentAsync(string modelNumber, string publicationType, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductInstallationGuides", ReplyAction="http://Electrolux.Pims/IPimService/GetProductInstallationGuidesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductInstallationGuidesMyApplicationFault" +
            "Fault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductInstallationGuides(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductInstallationGuides", ReplyAction="http://Electrolux.Pims/IPimService/GetProductInstallationGuidesResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductInstallationGuidesAsync(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductUserManuals", ReplyAction="http://Electrolux.Pims/IPimService/GetProductUserManualsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductUserManualsMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductUserManuals(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductUserManuals", ReplyAction="http://Electrolux.Pims/IPimService/GetProductUserManualsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductUserManualsAsync(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductBrochures", ReplyAction="http://Electrolux.Pims/IPimService/GetProductBrochuresResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductBrochuresMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductBrochures(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductBrochures", ReplyAction="http://Electrolux.Pims/IPimService/GetProductBrochuresResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductBrochuresAsync(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetBrochures", ReplyAction="http://Electrolux.Pims/IPimService/GetBrochuresResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetBrochuresMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.BrochureEntity[] GetBrochures(string brand, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetBrochures", ReplyAction="http://Electrolux.Pims/IPimService/GetBrochuresResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.BrochureEntity[]> GetBrochuresAsync(string brand, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductDimensionSheet", ReplyAction="http://Electrolux.Pims/IPimService/GetProductDimensionSheetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductDimensionSheetMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductDimensionSheet(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductDimensionSheet", ReplyAction="http://Electrolux.Pims/IPimService/GetProductDimensionSheetResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductDimensionSheetAsync(string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetCategoryExtension", ReplyAction="http://Electrolux.Pims/IPimService/GetCategoryExtensionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetCategoryExtensionMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.CategoryExtEntity GetCategoryExtension(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetCategoryExtension", ReplyAction="http://Electrolux.Pims/IPimService/GetCategoryExtensionResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryExtEntity> GetCategoryExtensionAsync(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByModelNumber", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryByModelNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByModelNumberMyApplicationFa" +
            "ultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategoryByModelNumber(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByModelNumber", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryByModelNumberResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryByModelNumberAsync(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByCategoryGuid", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryByCategoryGuidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByCategoryGuidMyApplicationF" +
            "aultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategoryByCategoryGuid(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceCategoryByCategoryGuid", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceCategoryByCategoryGuidResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryByCategoryGuidAsync(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetCategoryExtensionByGuid", ReplyAction="http://Electrolux.Pims/IPimService/GetCategoryExtensionByGuidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetCategoryExtensionByGuidMyApplicationFaultFa" +
            "ult", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.CategoryExtEntity GetCategoryExtensionByGuid(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetCategoryExtensionByGuid", ReplyAction="http://Electrolux.Pims/IPimService/GetCategoryExtensionByGuidResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryExtEntity> GetCategoryExtensionByGuidAsync(string service, string categoryGuid, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailability", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetAvailabilityMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        double GetAvailability(string modelNumber, string country, string state, string ean);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailability", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilityResponse")]
        System.Threading.Tasks.Task<double> GetAvailabilityAsync(string modelNumber, string country, string state, string ean);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailabilityWithTTL", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilityWithTTLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetAvailabilityWithTTLMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        double GetAvailabilityWithTTL(string modelNumber, string country, string state, string ean, string cacheTTL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailabilityWithTTL", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilityWithTTLResponse")]
        System.Threading.Tasks.Task<double> GetAvailabilityWithTTLAsync(string modelNumber, string country, string state, string ean, string cacheTTL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailabilitiesWithTTL", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilitiesWithTTLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetAvailabilitiesWithTTLMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.StockAvailabilityEntity> GetAvailabilitiesWithTTL(string[] modelNumbers, string country, string state, string cacheTTL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAvailabilitiesWithTTL", ReplyAction="http://Electrolux.Pims/IPimService/GetAvailabilitiesWithTTLResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.StockAvailabilityEntity>> GetAvailabilitiesWithTTLAsync(string[] modelNumbers, string country, string state, string cacheTTL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetModelSuggestionWithBrand", ReplyAction="http://Electrolux.Pims/IPimService/GetModelSuggestionWithBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetModelSuggestionWithBrandMyApplicationFaultF" +
            "ault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        string[] GetModelSuggestionWithBrand(string service, string modelNumber, string country, int startIdx, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetModelSuggestionWithBrand", ReplyAction="http://Electrolux.Pims/IPimService/GetModelSuggestionWithBrandResponse")]
        System.Threading.Tasks.Task<string[]> GetModelSuggestionWithBrandAsync(string service, string modelNumber, string country, int startIdx, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAEGModelSuggestionWithBrand", ReplyAction="http://Electrolux.Pims/IPimService/GetAEGModelSuggestionWithBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetAEGModelSuggestionWithBrandMyApplicationFau" +
            "ltFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        string[] GetAEGModelSuggestionWithBrand(string service, string modelNumber, string country, int startIdx, int count, string[] consignmentModels, bool showObsolete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetAEGModelSuggestionWithBrand", ReplyAction="http://Electrolux.Pims/IPimService/GetAEGModelSuggestionWithBrandResponse")]
        System.Threading.Tasks.Task<string[]> GetAEGModelSuggestionWithBrandAsync(string service, string modelNumber, string country, int startIdx, int count, string[] consignmentModels, bool showObsolete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductDetail", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceProductDetailMyApplicationFaultFault" +
            "", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductEntity GetServiceProductDetail(string service, string modelNumber, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductDetail", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductDetailResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductEntity> GetServiceProductDetailAsync(string service, string modelNumber, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductDetails", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetServiceProductDetailsMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.ProductEntity[] GetServiceProductDetails(string service, string[] modelNumbers, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetServiceProductDetails", ReplyAction="http://Electrolux.Pims/IPimService/GetServiceProductDetailsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductEntity[]> GetServiceProductDetailsAsync(string service, string[] modelNumbers, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetTechDataGroupEntities", ReplyAction="http://Electrolux.Pims/IPimService/GetTechDataGroupEntitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetTechDataGroupEntitiesMyApplicationFaultFaul" +
            "t", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.TechDataGroupEntity> GetTechDataGroupEntities(string service, string[] modelNumbers, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetTechDataGroupEntities", ReplyAction="http://Electrolux.Pims/IPimService/GetTechDataGroupEntitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.TechDataGroupEntity>> GetTechDataGroupEntitiesAsync(string service, string[] modelNumbers, string country, string isBrandMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetPromotions", ReplyAction="http://Electrolux.Pims/IPimService/GetPromotionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetPromotionsMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.PromotionEntity[] GetPromotions(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetPromotions", ReplyAction="http://Electrolux.Pims/IPimService/GetPromotionsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.PromotionEntity[]> GetPromotionsAsync(string service, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductCurrentPromotions", ReplyAction="http://Electrolux.Pims/IPimService/GetProductCurrentPromotionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetProductCurrentPromotionsMyApplicationFaultF" +
            "ault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.PromotionEntity[] GetProductCurrentPromotions(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetProductCurrentPromotions", ReplyAction="http://Electrolux.Pims/IPimService/GetProductCurrentPromotionsResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.PromotionEntity[]> GetProductCurrentPromotionsAsync(string service, string modelNumber, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetNewsletters", ReplyAction="http://Electrolux.Pims/IPimService/GetNewslettersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Elux.ApiIntergration.EluxPim.MyApplicationFault), Action="http://Electrolux.Pims/IPimService/GetNewslettersMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/Electrolux.Service")]
        Elux.ApiIntergration.EluxPim.NewsletterEntity[] GetNewsletters(string service, string country, string site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Electrolux.Pims/IPimService/GetNewsletters", ReplyAction="http://Electrolux.Pims/IPimService/GetNewslettersResponse")]
        System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.NewsletterEntity[]> GetNewslettersAsync(string service, string country, string site);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPimServiceChannel : Elux.ApiIntergration.EluxPim.IPimService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PimServiceClient : System.ServiceModel.ClientBase<Elux.ApiIntergration.EluxPim.IPimService>, Elux.ApiIntergration.EluxPim.IPimService {
        
        public PimServiceClient() {
        }
        
        public PimServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PimServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PimServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PimServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategory(string service, string country) {
            return base.Channel.GetServiceCategory(service, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryAsync(string service, string country) {
            return base.Channel.GetServiceCategoryAsync(service, country);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductBasic(string service, string modelNumber, string[] productStatus, string country) {
            return base.Channel.SearchProductBasic(service, modelNumber, productStatus, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductBasicAsync(string service, string modelNumber, string[] productStatus, string country) {
            return base.Channel.SearchProductBasicAsync(service, modelNumber, productStatus, country);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductsBasic(string service, string[] modelNumbers, string[] productStatus, string country) {
            return base.Channel.SearchProductsBasic(service, modelNumbers, productStatus, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductsBasicAsync(string service, string[] modelNumbers, string[] productStatus, string country) {
            return base.Channel.SearchProductsBasicAsync(service, modelNumbers, productStatus, country);
        }
        
        public Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductBasicPagination(string service, string modelNumber, string[] productStatus, string country, int pageIdx, int pageCnt) {
            return base.Channel.SearchProductBasicPagination(service, modelNumber, productStatus, country, pageIdx, pageCnt);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductBasicPaginationAsync(string service, string modelNumber, string[] productStatus, string country, int pageIdx, int pageCnt) {
            return base.Channel.SearchProductBasicPaginationAsync(service, modelNumber, productStatus, country, pageIdx, pageCnt);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] SearchProductKeyword(string service, string keyword, string[] productStatus, string country) {
            return base.Channel.SearchProductKeyword(service, keyword, productStatus, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> SearchProductKeywordAsync(string service, string keyword, string[] productStatus, string country) {
            return base.Channel.SearchProductKeywordAsync(service, keyword, productStatus, country);
        }
        
        public Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductKeywordPagination(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt) {
            return base.Channel.SearchProductKeywordPagination(service, keyword, productStatus, country, pageIdx, pageCnt);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductKeywordPaginationAsync(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt) {
            return base.Channel.SearchProductKeywordPaginationAsync(service, keyword, productStatus, country, pageIdx, pageCnt);
        }
        
        public Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchProductKeywordLimitByModelNumbers(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt, string[] limitedModelNumbers) {
            return base.Channel.SearchProductKeywordLimitByModelNumbers(service, keyword, productStatus, country, pageIdx, pageCnt, limitedModelNumbers);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchProductKeywordLimitByModelNumbersAsync(string service, string keyword, string[] productStatus, string country, int pageIdx, int pageCnt, string[] limitedModelNumbers) {
            return base.Channel.SearchProductKeywordLimitByModelNumbersAsync(service, keyword, productStatus, country, pageIdx, pageCnt, limitedModelNumbers);
        }
        
        public Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchAdvancedPagination(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels) {
            return base.Channel.SearchAdvancedPagination(service, categoryGuid, heightFrom, heightTo, widthFrom, widthTo, depthFrom, depthTo, productStatus, country, pageIdx, pageCnt, consignementmodels);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchAdvancedPaginationAsync(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels) {
            return base.Channel.SearchAdvancedPaginationAsync(service, categoryGuid, heightFrom, heightTo, widthFrom, widthTo, depthFrom, depthTo, productStatus, country, pageIdx, pageCnt, consignementmodels);
        }
        
        public Elux.ApiIntergration.EluxPim.SearchProductResultEntity SearchAdvancedLimitByModelNumbersPagination(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels, string[] limitedModelNumbers) {
            return base.Channel.SearchAdvancedLimitByModelNumbersPagination(service, categoryGuid, heightFrom, heightTo, widthFrom, widthTo, depthFrom, depthTo, productStatus, country, pageIdx, pageCnt, consignementmodels, limitedModelNumbers);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.SearchProductResultEntity> SearchAdvancedLimitByModelNumbersPaginationAsync(string service, string categoryGuid, string heightFrom, string heightTo, string widthFrom, string widthTo, string depthFrom, string depthTo, string[] productStatus, string country, int pageIdx, int pageCnt, string[] consignementmodels, string[] limitedModelNumbers) {
            return base.Channel.SearchAdvancedLimitByModelNumbersPaginationAsync(service, categoryGuid, heightFrom, heightTo, widthFrom, widthTo, depthFrom, depthTo, productStatus, country, pageIdx, pageCnt, consignementmodels, limitedModelNumbers);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetRecentServiceProducts(string service, string country) {
            return base.Channel.GetRecentServiceProducts(service, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetRecentServiceProductsAsync(string service, string country) {
            return base.Channel.GetRecentServiceProductsAsync(service, country);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetRecentServiceProductsByCategory(string service, string categoryGuid, string country) {
            return base.Channel.GetRecentServiceProductsByCategory(service, categoryGuid, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetRecentServiceProductsByCategoryAsync(string service, string categoryGuid, string country) {
            return base.Channel.GetRecentServiceProductsByCategoryAsync(service, categoryGuid, country);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductBasicEntity[] GetServiceProducts(string service, string categoryGuid, string[] productStatus, string country) {
            return base.Channel.GetServiceProducts(service, categoryGuid, productStatus, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductBasicEntity[]> GetServiceProductsAsync(string service, string categoryGuid, string[] productStatus, string country) {
            return base.Channel.GetServiceProductsAsync(service, categoryGuid, productStatus, country);
        }
        
        public Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[] GetServiceRelationship(string service, string relationshipType, string modelNumber, string country) {
            return base.Channel.GetServiceRelationship(service, relationshipType, modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.RelationshipGroupEntity[]> GetServiceRelationshipAsync(string service, string relationshipType, string modelNumber, string country) {
            return base.Channel.GetServiceRelationshipAsync(service, relationshipType, modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity GetServiceProductHeroImage(string service, string modelNumber, string country) {
            return base.Channel.GetServiceProductHeroImage(service, modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity> GetServiceProductHeroImageAsync(string service, string modelNumber, string country) {
            return base.Channel.GetServiceProductHeroImageAsync(service, modelNumber, country);
        }
        
        public string GetProductShortDescription(string modelNumber, string country) {
            return base.Channel.GetProductShortDescription(modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<string> GetProductShortDescriptionAsync(string modelNumber, string country) {
            return base.Channel.GetProductShortDescriptionAsync(modelNumber, country);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetProductShortDescriptions(string[] modelNumbers, string country) {
            return base.Channel.GetProductShortDescriptions(modelNumbers, country);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetProductShortDescriptionsAsync(string[] modelNumbers, string country) {
            return base.Channel.GetProductShortDescriptionsAsync(modelNumbers, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductAttachment(string modelNumber, string publicationType, string country) {
            return base.Channel.GetProductAttachment(modelNumber, publicationType, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductAttachmentAsync(string modelNumber, string publicationType, string country) {
            return base.Channel.GetProductAttachmentAsync(modelNumber, publicationType, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductInstallationGuides(string modelNumber, string country) {
            return base.Channel.GetProductInstallationGuides(modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductInstallationGuidesAsync(string modelNumber, string country) {
            return base.Channel.GetProductInstallationGuidesAsync(modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductUserManuals(string modelNumber, string country) {
            return base.Channel.GetProductUserManuals(modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductUserManualsAsync(string modelNumber, string country) {
            return base.Channel.GetProductUserManualsAsync(modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductBrochures(string modelNumber, string country) {
            return base.Channel.GetProductBrochures(modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductBrochuresAsync(string modelNumber, string country) {
            return base.Channel.GetProductBrochuresAsync(modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.BrochureEntity[] GetBrochures(string brand, string country) {
            return base.Channel.GetBrochures(brand, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.BrochureEntity[]> GetBrochuresAsync(string brand, string country) {
            return base.Channel.GetBrochuresAsync(brand, country);
        }
        
        public Elux.ApiIntergration.EluxPim.AttachmentEntity[] GetProductDimensionSheet(string modelNumber, string country) {
            return base.Channel.GetProductDimensionSheet(modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.AttachmentEntity[]> GetProductDimensionSheetAsync(string modelNumber, string country) {
            return base.Channel.GetProductDimensionSheetAsync(modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.CategoryExtEntity GetCategoryExtension(string service, string country) {
            return base.Channel.GetCategoryExtension(service, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryExtEntity> GetCategoryExtensionAsync(string service, string country) {
            return base.Channel.GetCategoryExtensionAsync(service, country);
        }
        
        public Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategoryByModelNumber(string service, string modelNumber, string country) {
            return base.Channel.GetServiceCategoryByModelNumber(service, modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryByModelNumberAsync(string service, string modelNumber, string country) {
            return base.Channel.GetServiceCategoryByModelNumberAsync(service, modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.CategoryEntity GetServiceCategoryByCategoryGuid(string service, string categoryGuid, string country) {
            return base.Channel.GetServiceCategoryByCategoryGuid(service, categoryGuid, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryEntity> GetServiceCategoryByCategoryGuidAsync(string service, string categoryGuid, string country) {
            return base.Channel.GetServiceCategoryByCategoryGuidAsync(service, categoryGuid, country);
        }
        
        public Elux.ApiIntergration.EluxPim.CategoryExtEntity GetCategoryExtensionByGuid(string service, string categoryGuid, string country) {
            return base.Channel.GetCategoryExtensionByGuid(service, categoryGuid, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.CategoryExtEntity> GetCategoryExtensionByGuidAsync(string service, string categoryGuid, string country) {
            return base.Channel.GetCategoryExtensionByGuidAsync(service, categoryGuid, country);
        }
        
        public double GetAvailability(string modelNumber, string country, string state, string ean) {
            return base.Channel.GetAvailability(modelNumber, country, state, ean);
        }
        
        public System.Threading.Tasks.Task<double> GetAvailabilityAsync(string modelNumber, string country, string state, string ean) {
            return base.Channel.GetAvailabilityAsync(modelNumber, country, state, ean);
        }
        
        public double GetAvailabilityWithTTL(string modelNumber, string country, string state, string ean, string cacheTTL) {
            return base.Channel.GetAvailabilityWithTTL(modelNumber, country, state, ean, cacheTTL);
        }
        
        public System.Threading.Tasks.Task<double> GetAvailabilityWithTTLAsync(string modelNumber, string country, string state, string ean, string cacheTTL) {
            return base.Channel.GetAvailabilityWithTTLAsync(modelNumber, country, state, ean, cacheTTL);
        }
        
        public System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.StockAvailabilityEntity> GetAvailabilitiesWithTTL(string[] modelNumbers, string country, string state, string cacheTTL) {
            return base.Channel.GetAvailabilitiesWithTTL(modelNumbers, country, state, cacheTTL);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.StockAvailabilityEntity>> GetAvailabilitiesWithTTLAsync(string[] modelNumbers, string country, string state, string cacheTTL) {
            return base.Channel.GetAvailabilitiesWithTTLAsync(modelNumbers, country, state, cacheTTL);
        }
        
        public string[] GetModelSuggestionWithBrand(string service, string modelNumber, string country, int startIdx, int count) {
            return base.Channel.GetModelSuggestionWithBrand(service, modelNumber, country, startIdx, count);
        }
        
        public System.Threading.Tasks.Task<string[]> GetModelSuggestionWithBrandAsync(string service, string modelNumber, string country, int startIdx, int count) {
            return base.Channel.GetModelSuggestionWithBrandAsync(service, modelNumber, country, startIdx, count);
        }
        
        public string[] GetAEGModelSuggestionWithBrand(string service, string modelNumber, string country, int startIdx, int count, string[] consignmentModels, bool showObsolete) {
            return base.Channel.GetAEGModelSuggestionWithBrand(service, modelNumber, country, startIdx, count, consignmentModels, showObsolete);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAEGModelSuggestionWithBrandAsync(string service, string modelNumber, string country, int startIdx, int count, string[] consignmentModels, bool showObsolete) {
            return base.Channel.GetAEGModelSuggestionWithBrandAsync(service, modelNumber, country, startIdx, count, consignmentModels, showObsolete);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductEntity GetServiceProductDetail(string service, string modelNumber, string country, string isBrandMobile) {
            return base.Channel.GetServiceProductDetail(service, modelNumber, country, isBrandMobile);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductEntity> GetServiceProductDetailAsync(string service, string modelNumber, string country, string isBrandMobile) {
            return base.Channel.GetServiceProductDetailAsync(service, modelNumber, country, isBrandMobile);
        }
        
        public Elux.ApiIntergration.EluxPim.ProductEntity[] GetServiceProductDetails(string service, string[] modelNumbers, string country, string isBrandMobile) {
            return base.Channel.GetServiceProductDetails(service, modelNumbers, country, isBrandMobile);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.ProductEntity[]> GetServiceProductDetailsAsync(string service, string[] modelNumbers, string country, string isBrandMobile) {
            return base.Channel.GetServiceProductDetailsAsync(service, modelNumbers, country, isBrandMobile);
        }
        
        public System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.TechDataGroupEntity> GetTechDataGroupEntities(string service, string[] modelNumbers, string country, string isBrandMobile) {
            return base.Channel.GetTechDataGroupEntities(service, modelNumbers, country, isBrandMobile);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Elux.ApiIntergration.EluxPim.TechDataGroupEntity>> GetTechDataGroupEntitiesAsync(string service, string[] modelNumbers, string country, string isBrandMobile) {
            return base.Channel.GetTechDataGroupEntitiesAsync(service, modelNumbers, country, isBrandMobile);
        }
        
        public Elux.ApiIntergration.EluxPim.PromotionEntity[] GetPromotions(string service, string country) {
            return base.Channel.GetPromotions(service, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.PromotionEntity[]> GetPromotionsAsync(string service, string country) {
            return base.Channel.GetPromotionsAsync(service, country);
        }
        
        public Elux.ApiIntergration.EluxPim.PromotionEntity[] GetProductCurrentPromotions(string service, string modelNumber, string country) {
            return base.Channel.GetProductCurrentPromotions(service, modelNumber, country);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.PromotionEntity[]> GetProductCurrentPromotionsAsync(string service, string modelNumber, string country) {
            return base.Channel.GetProductCurrentPromotionsAsync(service, modelNumber, country);
        }
        
        public Elux.ApiIntergration.EluxPim.NewsletterEntity[] GetNewsletters(string service, string country, string site) {
            return base.Channel.GetNewsletters(service, country, site);
        }
        
        public System.Threading.Tasks.Task<Elux.ApiIntergration.EluxPim.NewsletterEntity[]> GetNewslettersAsync(string service, string country, string site) {
            return base.Channel.GetNewslettersAsync(service, country, site);
        }
    }
}
